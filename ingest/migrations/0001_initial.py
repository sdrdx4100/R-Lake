# Generated by Django 5.2.4 on 2025-07-31 14:31

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Dataset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='データセット名')),
                ('description', models.TextField(blank=True, verbose_name='説明')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('vehicle_model', models.CharField(blank=True, max_length=100, verbose_name='車両モデル')),
                ('measurement_date', models.DateTimeField(blank=True, null=True, verbose_name='計測日時')),
                ('measurement_location', models.CharField(blank=True, max_length=255, verbose_name='計測場所')),
                ('total_rows', models.IntegerField(default=0, verbose_name='総レコード数')),
                ('is_active', models.BooleanField(default=True, verbose_name='アクティブ')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='作成者')),
            ],
            options={
                'verbose_name': 'データセット',
                'verbose_name_plural': 'データセット',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DataQualityReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_date', models.DateTimeField(auto_now_add=True, verbose_name='レポート日時')),
                ('total_records', models.IntegerField(verbose_name='総レコード数')),
                ('valid_records', models.IntegerField(verbose_name='有効レコード数')),
                ('invalid_records', models.IntegerField(verbose_name='無効レコード数')),
                ('duplicate_records', models.IntegerField(verbose_name='重複レコード数')),
                ('quality_details', models.JSONField(verbose_name='品質詳細')),
                ('dataset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quality_reports', to='ingest.dataset')),
            ],
            options={
                'verbose_name': 'データ品質レポート',
                'verbose_name_plural': 'データ品質レポート',
                'ordering': ['-report_date'],
            },
        ),
        migrations.CreateModel(
            name='DataValidationRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('column_name', models.CharField(max_length=255, verbose_name='対象カラム')),
                ('rule_type', models.CharField(choices=[('RANGE', '範囲チェック'), ('PATTERN', 'パターンマッチ'), ('NOT_NULL', 'NULL許可しない'), ('UNIQUE', 'ユニーク制約'), ('CUSTOM', 'カスタムルール')], max_length=20, verbose_name='ルール種類')),
                ('rule_config', models.JSONField(verbose_name='ルール設定')),
                ('is_active', models.BooleanField(default=True, verbose_name='アクティブ')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('dataset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='validation_rules', to='ingest.dataset')),
            ],
            options={
                'verbose_name': 'データバリデーションルール',
                'verbose_name_plural': 'データバリデーションルール',
            },
        ),
        migrations.CreateModel(
            name='RawDataFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('original_filename', models.CharField(max_length=255, verbose_name='元ファイル名')),
                ('file', models.FileField(upload_to='raw_data/%Y/%m/%d/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['csv', 'xlsx', 'xls'])], verbose_name='ファイル')),
                ('file_size', models.BigIntegerField(verbose_name='ファイルサイズ')),
                ('encoding', models.CharField(default='utf-8', max_length=20, verbose_name='文字エンコーディング')),
                ('delimiter', models.CharField(default=',', max_length=5, verbose_name='区切り文字')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True, verbose_name='アップロード日時')),
                ('processed', models.BooleanField(default=False, verbose_name='処理済み')),
                ('processing_error', models.TextField(blank=True, verbose_name='処理エラー')),
                ('dataset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='raw_files', to='ingest.dataset')),
            ],
            options={
                'verbose_name': '生データファイル',
                'verbose_name_plural': '生データファイル',
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='DataSchema',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('column_name', models.CharField(max_length=255, verbose_name='カラム名')),
                ('column_type', models.CharField(choices=[('INTEGER', '整数'), ('FLOAT', '小数'), ('STRING', '文字列'), ('DATETIME', '日時'), ('BOOLEAN', 'ブール値')], max_length=20, verbose_name='データ型')),
                ('is_nullable', models.BooleanField(default=True, verbose_name='NULL許可')),
                ('default_value', models.CharField(blank=True, max_length=255, verbose_name='デフォルト値')),
                ('column_order', models.IntegerField(verbose_name='カラム順序')),
                ('min_value', models.FloatField(blank=True, null=True, verbose_name='最小値')),
                ('max_value', models.FloatField(blank=True, null=True, verbose_name='最大値')),
                ('unique_count', models.IntegerField(blank=True, null=True, verbose_name='ユニーク数')),
                ('dataset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schema_fields', to='ingest.dataset')),
            ],
            options={
                'verbose_name': 'データスキーマ',
                'verbose_name_plural': 'データスキーマ',
                'ordering': ['dataset', 'column_order'],
                'unique_together': {('dataset', 'column_name')},
            },
        ),
        migrations.CreateModel(
            name='DataRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('row_number', models.IntegerField(verbose_name='行番号')),
                ('data', models.JSONField(verbose_name='データ')),
                ('imported_at', models.DateTimeField(auto_now_add=True, verbose_name='インポート日時')),
                ('data_hash', models.CharField(max_length=64, verbose_name='データハッシュ')),
                ('dataset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='records', to='ingest.dataset')),
            ],
            options={
                'verbose_name': 'データレコード',
                'verbose_name_plural': 'データレコード',
                'ordering': ['dataset', 'row_number'],
                'indexes': [models.Index(fields=['dataset', 'row_number'], name='ingest_data_dataset_52783f_idx'), models.Index(fields=['data_hash'], name='ingest_data_data_ha_988197_idx')],
                'unique_together': {('dataset', 'row_number')},
            },
        ),
    ]
